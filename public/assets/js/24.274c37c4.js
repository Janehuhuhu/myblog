(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{467:function(t,a,s){"use strict";s.r(a);var e=s(45),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[t._v("#")]),t._v(" 常用命令")]),t._v(" "),s("h3",{attrs:{id:"pull-和-push-命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pull-和-push-命令"}},[t._v("#")]),t._v(" pull 和 push 命令")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git pull pb "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以设定不同的远程仓库，从pb仓库下载所有分支代码")]),t._v("\ngit push origin master  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// push可以设定远程仓库和分支")]),t._v("\n")])])]),s("div",{staticStyle:{"margin-top":"50px"}}),t._v(" "),s("h3",{attrs:{id:"建立分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#建立分支"}},[t._v("#")]),t._v(" 建立分支")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git branch xxx     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建分支xxx")]),t._v("\ngit checkout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b xxx   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在当前分支的基础上建立分支xxx，该当前分支即为xxx的上流分支")]),t._v("\ngit checkout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b xxx "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置上流分支")]),t._v("\ngit checkout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("track "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 效果同上")]),t._v("\ngit branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("u "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 修改已有分支的上流分支 ")]),t._v("\n")])])]),s("div",{staticStyle:{"margin-top":"50px"}}),t._v(" "),s("h3",{attrs:{id:"删除分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除分支"}},[t._v("#")]),t._v(" 删除分支")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("d xxx   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除本地已合并分支")]),t._v("\ngit branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("D")]),t._v(" xxx   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 强行删除本地未合并分支")]),t._v("\ngit push origin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" xxx   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除远程分支")]),t._v("\n")])])]),s("div",{staticStyle:{"margin-top":"50px"}}),t._v(" "),s("h3",{attrs:{id:"删除暂存区-工作区文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除暂存区-工作区文件"}},[t._v("#")]),t._v(" 删除暂存区/工作区文件")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git rm "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("cached xxx "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 解除文件跟踪，即在暂存区或已提交的文件的留在工作区，git中为未跟踪状态；")]),t._v("\ngit rm xxx  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除暂存区或已提交文件(git中无状态记录)，工作区中也删除,即本地磁盘也删除")]),t._v("\ngit rm "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f xxx "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除已修改的(无论修改后有无放入暂存区)文件，都需使用强制删除才可以在工作区删除，且git中无状态记录")]),t._v("\n")])])]),s("div",{staticStyle:{"margin-top":"50px"}}),t._v(" "),s("h3",{attrs:{id:"查看文件差异"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看文件差异"}},[t._v("#")]),t._v(" 查看文件差异")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git diff  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 文件修改后，查看工作目录中尚未暂存的和已暂存的文件的差异，也就是修改之后还没有暂存起来的变化内容")]),t._v("\ngit diff "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("staged  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这条命令将比对已暂存文件与最后一次提交的文件差异")]),t._v("\n")])])]),s("div",{staticStyle:{"margin-top":"50px"}}),t._v(" "),s("h3",{attrs:{id:"撤销修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#撤销修改"}},[t._v("#")]),t._v(" 撤销修改")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git checkout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("xxx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("文件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 撤销修改，把文件在工作区的修改撤销到最近一次git add 或 git commit时的内容")]),t._v("\n")])])]),s("div",{staticStyle:{"margin-top":"50px"}}),t._v(" "),s("h3",{attrs:{id:"暂存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#暂存"}},[t._v("#")]),t._v(" 暂存")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git stash  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 暂存区和工作区的改动暂时保存")]),t._v("\ngit stash list   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 显示保存列表")]),t._v("\ngit stash pop  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 命令恢复之前缓存的工作目录,将缓存堆栈中的对应stash删除，并将对应修改应用到当前的工作目录下")]),t._v("\ngit stash pop stash@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("$num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//比如应用并删除第二个：git stash pop stash@{1}")]),t._v("\ngit stash apply  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//应用某个存储,但不会把存储从存储列表中删除，默认使用第一个存储,即stash@{0}")]),t._v("\ngit stash apply stash@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("$num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 比如第二个：git stash apply stash@{1} ")]),t._v("\n")])])]),s("div",{staticStyle:{"margin-top":"50px"}}),t._v(" "),s("h3",{attrs:{id:"回滚"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回滚"}},[t._v("#")]),t._v(" 回滚")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git reset "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 回滚暂存区内容, 将咱暂存区和HEAD的提交保持一致")]),t._v("\ngit reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("hard "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("bea37a48030af364e28ce8c1c4d1345dbf11220（上次的commit log）"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 回滚本地仓库内容, 将工作区、暂存区和commit id 记录保持一致")]),t._v("\ngit reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("hard origin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" master "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 抛弃我所有的分阶段和未分阶段的更改，忘记我当前的本地分支上的一切，使它与origin / master完全相同")]),t._v("\ngit reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("hard "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 回退版本信息, Git必须知道当前版本是哪个版本，在Git中，用HEAD表示当前版本，，上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100")]),t._v("\n")])])]),s("div",{staticStyle:{"margin-top":"50px"}}),t._v(" "),s("h3",{attrs:{id:"git-删除未跟踪文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-删除未跟踪文件"}},[t._v("#")]),t._v(" git 删除未跟踪文件")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git clean "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除 untracked files")]),t._v("\ngit clean "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("fd  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 连 untracked 的目录也一起删掉")]),t._v("\ngit clean "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("xfd  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 连 gitignore 的untrack 文件/目录也一起删掉 （慎用，一般这个是用来删掉编译出来的 .o之类的文件用的）")]),t._v("\ngit clean "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("nxfd "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// # 在用上述 git clean 前，墙裂建议加上 -n 参数来先看看会删掉哪些文件，防止重要文件被误删")]),t._v("\ngit clean "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("nf\ngit clean "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("nfd\n")])])]),s("div",{staticStyle:{"margin-top":"50px"}}),t._v(" "),s("h3",{attrs:{id:"修改配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改配置"}},[t._v("#")]),t._v(" 修改配置")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("git")]),t._v(" 中，我们使用 "),s("code",[t._v("git config")]),t._v(" 命令用来配置 "),s("code",[t._v("git")]),t._v(" 的配置文件，"),s("code",[t._v("git")]),t._v(" 配置级别主要有以下3类：")]),t._v(" "),s("ul",[s("li",[t._v("仓库级别 local 【优先级最高】, 存储于 "),s("em",[t._v(".git/config")])]),t._v(" "),s("li",[t._v("用户级别 global【优先级次之】, 存储于 "),s("em",[t._v("~/.gitconfig")])]),t._v(" "),s("li",[t._v("系统级别 system【优先级最低】, 存储于 "),s("em",[t._v("/etc/gitconfig")])])]),t._v(" "),s("h4",{attrs:{id:"修改本地仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改本地仓库"}},[t._v("#")]),t._v(" 修改本地仓库")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git config user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new username'")]),t._v("\ngit config user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("email "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new email'")]),t._v("\n")])])]),s("h4",{attrs:{id:"修改全局仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改全局仓库"}},[t._v("#")]),t._v(" 修改全局仓库")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git config "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("global user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new username'")]),t._v("\ngit config "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("global user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("email "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new email'")]),t._v("\n")])])]),s("h4",{attrs:{id:"查看配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看配置"}},[t._v("#")]),t._v(" 查看配置")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git config "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("local "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("list "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 本仓库")]),t._v("\ngit config "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("list\n")])])]),s("h3",{attrs:{id:"清除log记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#清除log记录"}},[t._v("#")]),t._v(" 清除log记录")]),t._v(" "),s("h4",{attrs:{id:"方法一-创建非继承分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法一-创建非继承分支"}},[t._v("#")]),t._v(" 方法一: 创建非继承分支")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git checkout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("orphan main  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// checkout, 创建了一个新的非父分支(不继承父log)")]),t._v("\ngit add "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// add all files")]),t._v("\ngit commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m main     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// commit changes")]),t._v("\ngit branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("D")]),t._v(" master   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// delete branch")]),t._v("\ngit branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m master   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// rename current branch to master")]),t._v("\ngit push "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f origin master  \n")])])]),s("h4",{attrs:{id:"方法二-删除-git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法二-删除-git"}},[t._v("#")]),t._v(" 方法二：删除.git")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("ls "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查看所有文件，包括 .git")]),t._v("\nrm "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("rf "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git \n")])])]),s("h3",{attrs:{id:"🔗相关链接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🔗相关链接"}},[t._v("#")]),t._v(" 🔗相关链接")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.bookstack.cn/read/git-tutorial/docs-commands-git-checkout.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("常用命令"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.jianshu.com/p/aeb50b94e6c0",target:"_blank",rel:"noopener noreferrer"}},[t._v("回滚"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=r.exports}}]);